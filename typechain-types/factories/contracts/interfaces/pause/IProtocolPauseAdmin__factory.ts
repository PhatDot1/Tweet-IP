/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IProtocolPauseAdmin,
  IProtocolPauseAdminInterface,
} from "../../../../contracts/interfaces/pause/IProtocolPauseAdmin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pausable",
        type: "address",
      },
    ],
    name: "PausableAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pausable",
        type: "address",
      },
    ],
    name: "PausableRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ProtocolPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ProtocolUnpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pausable",
        type: "address",
      },
    ],
    name: "addPausable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isAllProtocolPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pausable",
        type: "address",
      },
    ],
    name: "isPausableRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausables",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pausable",
        type: "address",
      },
    ],
    name: "removePausable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IProtocolPauseAdmin__factory {
  static readonly abi = _abi;
  static createInterface(): IProtocolPauseAdminInterface {
    return new Interface(_abi) as IProtocolPauseAdminInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IProtocolPauseAdmin {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IProtocolPauseAdmin;
  }
}
