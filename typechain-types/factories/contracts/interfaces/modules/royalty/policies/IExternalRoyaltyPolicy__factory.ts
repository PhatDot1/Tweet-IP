/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IExternalRoyaltyPolicy,
  IExternalRoyaltyPolicyInterface,
} from "../../../../../../contracts/interfaces/modules/royalty/policies/IExternalRoyaltyPolicy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "licensePercent",
        type: "uint32",
      },
    ],
    name: "getPolicyRtsRequiredToLink",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IExternalRoyaltyPolicy__factory {
  static readonly abi = _abi;
  static createInterface(): IExternalRoyaltyPolicyInterface {
    return new Interface(_abi) as IExternalRoyaltyPolicyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IExternalRoyaltyPolicy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IExternalRoyaltyPolicy;
  }
}
