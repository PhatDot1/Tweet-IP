/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVaultController,
  IVaultControllerInterface,
} from "../../../../../../contracts/interfaces/modules/royalty/policies/IVaultController";

const _abi = [
  {
    inputs: [],
    name: "ipRoyaltyVaultBeacon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "setIpRoyaltyVaultBeacon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVault",
        type: "address",
      },
    ],
    name: "upgradeVaults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IVaultController__factory {
  static readonly abi = _abi;
  static createInterface(): IVaultControllerInterface {
    return new Interface(_abi) as IVaultControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVaultController {
    return new Contract(address, _abi, runner) as unknown as IVaultController;
  }
}
