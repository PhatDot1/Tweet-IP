/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IGroupRewardPool,
  IGroupRewardPoolInterface,
} from "../../../../../contracts/interfaces/modules/grouping/IGroupRewardPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "groupId",
        type: "address",
      },
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minimumGroupRewardShare",
        type: "uint256",
      },
    ],
    name: "addIp",
    outputs: [
      {
        internalType: "uint256",
        name: "totalGroupRewardShare",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "groupId",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "groupId",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "ipIds",
        type: "address[]",
      },
    ],
    name: "distributeRewards",
    outputs: [
      {
        internalType: "uint256[]",
        name: "rewards",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "groupId",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "ipIds",
        type: "address[]",
      },
    ],
    name: "getAvailableReward",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "groupId",
        type: "address",
      },
      {
        internalType: "address",
        name: "ipId",
        type: "address",
      },
    ],
    name: "removeIp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IGroupRewardPool__factory {
  static readonly abi = _abi;
  static createInterface(): IGroupRewardPoolInterface {
    return new Interface(_abi) as IGroupRewardPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IGroupRewardPool {
    return new Contract(address, _abi, runner) as unknown as IGroupRewardPool;
  }
}
